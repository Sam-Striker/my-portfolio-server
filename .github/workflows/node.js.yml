name: Build
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x]
        mongodb-version: ['4.2', '4.4']
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.7.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}
    - run: npm install
    - run: npm run build
    - run: npm run cover
    - name: Code Climate Test Reporter
      uses: paambaati/codeclimate-action@v3.0.0
      with:
        codeclimate-test-reporter-id: 586ac4dad61e91153c591fc80b5cc1639e01ab5241c579aaff866f650b385f01
        command: npm run cover
        command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build
        
#     - run:
#       name: Setup Code Climate test-reporter
#       with:
#       codeclimate-test-reporter-id: 586ac4dad61e91153c591fc80b5cc1639e01ab5241c579aaff866f650b385f01
#       command: |
#             curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
#             chmod +x ./cc-test-reporter
#             ./cc-test-reporter before-build
#       when: always
#     - run:
#       name: Send coverage report to Code Climate
#       command: |
#             ./cc-test-reporter after-build -t lcov
#       when: always

#       - store_artifacts:
#           path: ./coverage/lcov.info
#           prefix: tests
      env:
        CI: true
        PASS: ${{ secrets.PASS }}
        MONGO_URI: ${{ secrets.MONGO_URI }}
        PORT: ${{ secrets.PORT }}
        JWT_SECRET: ${{ secrets.JWT_SECRET}}
